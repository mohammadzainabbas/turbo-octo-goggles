name: Python Application Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        architecture: ['x64']
    steps:
    - name: Checkout current repo
      uses: actions/checkout@v2
    - name: Set up Python (${{ matrix.python-version }}) - ${{ matrix.architecture }} on Ubuntu
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ubuntu-python-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ubuntu-python-${{ matrix.python-version }}-
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Run Streamlit App
      run: |
        streamlit run my_app.py --server.headless true & sleep 20s; kill $!

  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        architecture: ['x64']
    steps:
    - name: Checkout current repo
      uses: actions/checkout@v2
    - name: Set up Python (${{ matrix.python-version }}) - ${{ matrix.architecture }} on Windows
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~\\AppData\\Local\\pip\\Cache
        key: windows-python-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          windows-python-${{ matrix.python-version }}-
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Run Streamlit App
      run: |
        start /b streamlit run my_app.py --server.headless true
        timeout /t 20
        taskkill /im streamlit.exe /f

  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13.0-alpha.2']
        architecture: ['x64', 'arm64']
    steps:
    - name: Checkout current repo
      uses: actions/checkout@v2
    - name: Set up Python (${{ matrix.python-version }}) - ${{ matrix.architecture }} on MacOS
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Cache Python dependencies
      uses: actions/cache@v2
      with:
        path: ~/Library/Caches/pip
        key: macos-python-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          macos-python-${{ matrix.python-version }}-
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: Run Streamlit App
      run: |
        streamlit run my_app.py --server.headless true & sleep 20s; kill $!